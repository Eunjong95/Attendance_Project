<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team5.myapp.member.dao.IMemberRepository">

<select id="selectMember" resultType="com.team5.myapp.member.model.Member">
		<![CDATA[
			SELECT user_id as "userId", 
				   user_name as "userName", 
				   password as "password", 
				   phone as "phone", 
				   email as "email",
				   lecture_id as "lectureId",
				   role as "role"
			FROM members
			WHERE user_id=#{userId}
		]]>
	</select>
	
	<select id="getPassword" parameterType="string" resultType="string">
		<![CDATA[
			SELECT password
			FROM members
			WHERE user_id=#{userId}
		]]>
	</select>
	
	<select id="selectMemberRole" resultType="int">
		<![CDATA[
			SELECT role
			FROM members
			WHERE user_id=#{userId}
		]]>
	</select>

	<select id="selectMemberCountByLectureId" parameterType="int" resultType="int">
			SELECT COUNT(user_id) as "count" 
			FROM MEMBERS
			<if test="lectureId != 0">
			WHERE lecture_id=#{lectureId}
			</if>
	</select>
	
	<select id="selectAttendMemberCountByLectureId" parameterType="int" resultType="int">
		<![CDATA[
			select
				count(m.user_id) as "count"
			from
				members m, 
				lecture l,
				(
	            	select 
	            		user_id, 
	            		attendance_id , 
	            		attendance_date ,
	            		status
	            	from 
	            		attendance 
	            	where 
	            		to_char(attendance_date,'YY/MM/DD') = to_char(sysdate,'YY/MM/DD')
	            ) a
			where
				a.user_id=m.user_id and
				m.lecture_id=l.lecture_id and
	            (
		            to_char(a.attendance_date,'YY/MM/DD') =to_char(sysdate,'YY/MM/DD') or
		            a.attendance_date is null
	            )
	            and m.role!=1
	            and (a.status=0 or a.status=5)
	            and l.lecture_id=#{lectureId}
		]]>
	</select>
	<select id="selectMemberList" parameterType="map" resultType="com.team5.myapp.member.model.Member">
		<![CDATA[
			select
			    rnum,
			    status as "todayStatus", 
			    user_name as "userName",
			    lecture_name as "lectureName"
			from
			(
			    select
			        rownum as rnum,
			        status, 
			        user_name,
			        lecture_name
			    from
			    (
			        select 
			            a.status, 
			            m.user_name,
			            l.lecture_name,
			            a.attendance_date
			        from
			            (
			            	select 
			            		user_id, 
			            		attendance_date ,
			            		status
			            	from 
			            		attendance 
			            	where 
			            		to_char(attendance_date,'YY/MM/DD') = to_char(sysdate,'YY/MM/DD')
			            ) a,
			            members m,
			            lecture l
			        where 
			            a.user_id(+)=m.user_id and
			            m.lecture_id=l.lecture_id and
			            (
				            to_char(a.attendance_date,'YY/MM/DD') =to_char(sysdate,'YY/MM/DD') or
				            a.attendance_date is null
			            )
			        order by lecture_name , user_name
			    )
			    where
			        rownum<=#{end}
			)
			where 
			    rnum>=#{start}
		]]>
	</select>

	<select id="selectMemberCount" parameterType="int" resultType="int">
		<![CDATA[
			select
				count(m.user_id) as "count"
			from
				members m, 
				(
	            	select 
	            		user_id, 
	            		attendance_date ,
	            		status
	            	from 
	            		attendance 
	            	where 
	            		to_char(attendance_date,'YY/MM/DD') = to_char(sysdate,'YY/MM/DD')
	            ) a
			where
				a.user_id(+)=m.user_id and
	            (
		            to_char(a.attendance_date,'YY/MM/DD') =to_char(sysdate,'YY/MM/DD') or
		            a.attendance_date is null
	            )
	            and m.role!=1
		]]>
    </select>
    
    <select id="selectMemberListByStatus" parameterType="map" resultType="com.team5.myapp.member.model.Member">
		select
			user_name as "userName",
			clock_in as "clockIn",
			rownum
		from
		(
			select
				*
			from
			(
				select
					m.user_name ,
					a.clock_in,
					status
				from
					members m, 
					(
		            	select 
		            		user_id, 
		            		attendance_date ,
		            		status,
		            		clock_in
		            	from 
		            		attendance 
		            	where 
		            		to_char(attendance_date,'YY/MM/DD') = to_char(sysdate,'YY/MM/DD')
		            ) a
				where
					a.user_id(+)=m.user_id and
		            (
			            to_char(a.attendance_date,'YY/MM/DD') =to_char(sysdate,'YY/MM/DD') or
			            a.attendance_date is null
		            )
		            and m.role!=1
			)
			where
				status = #{attendanceStatus}
			<if test="attendanceStatus == 2">
				or (
					to_char(clock_in,'HH24') between '09' and '16'
					and status != 3 
					and status != 1
				)
			</if>
		)
		where rownum between #{start} and #{end}
	</select>
	
	<select id="selectMemberListByLectureId" parameterType="map" resultType="com.team5.myapp.member.model.Member">
		<![CDATA[
			select 
				user_id as "userId",
				user_name as "userName",
				phone as "phone",
				email as "email"
			from
			(
				select
					rownum as rnum,
					user_id ,
					user_name ,
					phone ,
					email 
				from
					members
				where
					lecture_id=#{lectureId}
					and rownum<=#{end}
			)
			where 
				rnum>=#{start}
			
		]]>
	</select>
	
	<select id="selectMemberAttendanceByLectureId" parameterType="map" resultType="com.team5.myapp.member.model.Member">
		SELECT
		    m.user_id as "userId",
		    lecture_id as "lectureId",
		    user_name as "userName",
		    attendance_date as "attendanceDate",
		    status as "todayStatus",
		    clock_in as "clockIn",
		    clock_out as "clockOut"
		FROM members m left outer join 
		    (SELECT 
		        user_id, 
		        attendance_id, 
		        attendance_date,
		        clock_in,
		        clock_out,
		        status
		    FROM 
		        attendance 
		    WHERE 
		        to_char(attendance_date,'YY/MM/DD') = to_char(sysdate,'YY/MM/DD')
		    ) a
		    on m.user_id=a.user_id
		WHERE (to_char(a.attendance_date,'YY/MM/DD')=to_char(sysdate,'YY/MM/DD') 
		        or a.attendance_date is null)
		        and role != 1
		        <if test="lectureId != 0">
		        	and lecture_id = #{lectureId}
		        </if>
		ORDER BY lecture_id
		OFFSET #{start} ROWS
		FETCH FIRST #{end} ROWS ONLY
	</select>
</mapper>